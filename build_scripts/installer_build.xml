<project name="installer_build" xmlns:ivy="antlib:org.apache.ivy.ant"
		 xmlns:nl="antlib:com.nextlabs.bnr.ant">
  <dirname property="common.build.script.dir" file="${ant.file.installscript_build}"/>

  <import file="${common.build.script.dir}/common_build.xml" />

  <target name="init" depends="common_build.init" description="Initialize build">
	<nl:propertyFile dir="${common.build.script.dir}" fileName="installer_build"/>	
  </target>

  <macrodef name="compileIsProject">
	<attribute name="installerProjectFile" />
	<attribute name="additionalArgs" default=""/>

	<sequential>
	  <pathconvert dirsep="\" property="build.dir.back.slashes">
	    <path path="${build.dir}" />
	  </pathconvert> 

      <pathconvert dirsep="\" property="deploy.dir.back.slashes">
	    <path path="${deploy.dir}" />
	  </pathconvert> 

	  <exec executable="${installsheild.builder.exe}" failonerror="true">
	    <arg line="-p ${build.main.installer.dir}/@{installerProjectFile}"/>
	    <arg line="-x"/>
	    <arg line="-o ${build.main.installer.dir}/merge"/>
	    <arg line="@{additionalArgs}"/>
	    <env key="DEPLOY_DIR" value="${deploy.dir.back.slashes}" />
	    <env key="BUILD_DIR" value="${build.dir.back.slashes}" />
	  </exec>
    </sequential>
  </macrodef>

  <target name="pre_compile_installer" 
          depends="resolve, download_dependencies">
    <mkdir dir="${build.main.installer.dir}" />
	<copy todir="${build.main.installer.dir}" overwrite="true">
	  <fileset dir="${src.main.installer.dir}" />
	</copy>

	<!-- This is hack to ensure that the installer project can be built both from the IDE and ant -->
	<replace file="${build.main.installer.dir}/${installer.project.file}"
			 token="&amp;lt;ISProjectFolder&amp;gt;..\..\image\main" 
			 value="&amp;lt;ISProjectFolder&amp;gt;..\image"/>

	<!-- Copy the license file -->
	<copy todir="${build.main.installer.dir}" file="${common.build.script.dir}/${installer.license.file}" />

	<!-- Download .obl dependencies -->
	<ivy:retrieve pattern="${build.main.installer.dir}/Script Files/include/([releasetype]_)([os]_)([arch])/([compiler])[artifact].[ext]"
				  conf="main"
				  type="obl,h" 
				  resolveId="${ant.project.name}"/>
  </target>

  <!-- Compile -->
  <target name="compile_installer" depends="pre_compile_installer">
    <compileIsProject installerProjectFile="${installer.project.file}" />

    <!-- Copy result to build root -->	
	<copy file="${build.main.installer.dir}/${installer.output.file}" todir="${build.root.dir}" />    
  </target>

  <target name="build_installer" depends="build, compile_installer" description="Build the project with the installer" />
  
  <target name="rebuild_installer" depends="clean, build_installer" />

  <target name="build_installer_only" depends="compile_installer" description="Build the installer only" />
  
  <!-- Special Target for setting up IDE to build -->
  <target name="ide_init" depends="resolve">
	<!-- Copy the license file -->
	<copy todir="${src.main.installer.dir}" file="${common.build.script.dir}/${installer.license.file}" />

	<!-- Download .obl dependencies -->
	<ivy:retrieve pattern="${src.main.installer.dir}/Script Files/include/[artifact].[ext]"
				  conf="main"
				  type="obl,h" 
				  resolveId="${ant.project.name}"/>	
	<ivy:retrieve pattern="${src.main.installer.dir}/obl/[artifact].[ext]"
				  conf="main"
				  type="obl" 
				  resolveId="${ant.project.name}"/>
	<ivy:retrieve pattern="${src.main.installer.dir}/lib/[artifact].[ext]"
				  conf="main"
				  type="dll,lib" 
				  resolveId="${ant.project.name}"/>
	<ivy:retrieve pattern="${src.main.installer.dir}/jlib/[artifact].[ext]"
				  conf="main"
				  type="jar" 
				  resolveId="${ant.project.name}"/>
	<ivy:retrieve pattern="${installshield.merge.module.location}/merge/[artifact].[ext]"
				  conf="main"
				  type="msm" 
				  resolveId="${ant.project.name}"/>
	<ivy:retrieve pattern="${src.main.installer.dir}/misc_external/[artifact].[ext]"
				  conf="main"
				  type="!jar, !dll, !obl, !h" 
				  resolveId="${ant.project.name}"/>
  </target>
  
  <!-- Special Target to clean IDE build -->
  <target name="ide_clean">
	<!-- Not a good clean way to delete files generated by Installshield in IsProjectDataDir in a generic way -->
    <delete includeemptydirs="true" dir="${src.main.installer.dir}/Script Files/include"/>
    <delete includeemptydirs="true" dir="${src.main.installer.dir}/obl"/>
    <delete includeemptydirs="true" dir="${src.main.installer.dir}/lib"/>
    <delete includeemptydirs="true" dir="${src.main.installer.dir}/jlib"/>
    <delete includeemptydirs="true" dir="${src.main.installer.dir}/misc_external"/>
  </target>
</project>
